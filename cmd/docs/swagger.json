{
    "swagger": "2.0",
    "info": {
        "description": "This is product api swagger doc.",
        "title": "Swagger Product API",
        "contact": {
            "name": "yan.jinbin",
            "email": "yan.jinbin@shipper.id"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v0.0.1"
    },
    "host": "127.0.0.1:10000",
    "basePath": "/v1",
    "paths": {
        "/v1/product": {
            "post": {
                "description": "so we need do shipper standard category id and brand id mapping , many attributes to special marketplace category id, brand id, and product attributes\nLazada: https://bit.ly/3PwiIgO shopee: https://bit.ly/3LjQimY Tokopedia: https://bit.ly/3wqKD9c  Tiktok: https://bit.ly/3NaZiMr\nNeed to be design seriously, talked and review, especially for request body\ncreate product on multiple marketplaces, e.g. create iphone13 256gb on tiktok shop.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "create product on multiple marketplaces, how to create a product refer link: lazada usecase-\u003e https://bit.ly/3yym6BG",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "common query params: shop_id",
                        "name": "shop_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "common query params: marketplace type",
                        "name": "mp",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Create Product Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AddEditProductReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPCreateProductResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    }
                }
            },
            "delete": {
                "description": "tokopedia: https://bit.ly/38fpR4n, lazada: https://bit.ly/3yCt7l4 shopee: https://bit.ly/3wtMMAY tiktok: https://bit.ly/38qiuHe\ndelete product from product list, e.g. delete iphone 13 red 256GB from shop product list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "delete product from product list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "common query params: shop_id",
                        "name": "shop_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "common query params: marketplace type",
                        "name": "mp",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Delete Product From Shelf",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ProductIDSRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPEmptyResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    }
                }
            }
        },
        "/v1/product/brand": {
            "get": {
                "description": "Lazada: https://bit.ly/3l8loTF shopee: https://bit.ly/3L7JMQ5 Tokopedia: (NONE,not found brand api) Tiktok: https://bit.ly/3FO6Pym\nneed to brand_id  mapping to marketplace brand id(TODO)\nsupport pagination query\nget brand list from marketplace e.g. get brand list like Apple Google Facebook Airbnb",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brand"
                ],
                "summary": "get brand list from marketplace",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "common query params: shop_id",
                        "name": "shop_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "common query params: marketplace type",
                        "name": "mp",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "common query params: page number",
                        "name": "page_no",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "common query params: page size",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPGetBrandListResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    }
                }
            }
        },
        "/v1/product/category": {
            "get": {
                "description": "Lazada: https://bit.ly/3wbFq64 shopee: https://bit.ly/3l7cjKT Tokopedia:  https://bit.ly/39fr2Rj Tiktok: https://bit.ly/3FI0HaM\nget category tree or dictionary from marketplace\ne.g. get category tree, like telecommunication-\u003emobile phone-\u003e iphone -\u003e iphone 13 series",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "get category tree or dictionary from marketplace",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "common query params: shop_id",
                        "name": "shop_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "common query params: marketplace type",
                        "name": "mp",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPGetCategoryTreeResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    }
                }
            }
        },
        "/v1/product/category/attribute": {
            "get": {
                "description": "Lazada: https://bit.ly/3Ncd0yp  shopee: https://bit.ly/3PxuYOb  Tokopedia: https://bit.ly/3wkdMCQ Tiktok: https://bit.ly/3wtQdrm\nNeed to category_id mapping to marketplace category id(TODO)\nGet product attributes from marketplace e.g. under category_id 100, product attributes is waterproof fireproof isDangerous R18",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "get product attributes from marketplace, in other words, category attributes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "common query params: shop_id",
                        "name": "shop_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "common query params: marketplace type",
                        "name": "mp",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "category_id",
                        "name": "category_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPGetProductAttrsResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    }
                }
            }
        },
        "/v1/product/edit": {
            "patch": {
                "description": "a bit different like createProduct API, we query product attributes from specific marketplace when we create product, product info stored in our database\nlazada: https://bit.ly/3ld8CU5 shopee: https://bit.ly/3lg4vX7 tokopedia: https://bit.ly/3FJFEV4 tiktok: https://bit.ly/3lb5VCs\nsupport single edie, bulk edit not supported\nedit product attributes, e.g. package weight,width,height,is_dangerous,",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "is edit product attributes",
                "parameters": [
                    {
                        "description": "Update Product attributes",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AddEditProductReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPUpdateProductResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    }
                }
            }
        },
        "/v1/product/info": {
            "get": {
                "description": "Lazada: 批量查询 https://bit.ly/3MfPaBQ 单条查询 https://bit.ly/39mmw3i 数据都是一模一样得,\nshopee: https://bit.ly/3syQb0h get_item_list-\u003eget_item_base_info-\u003eget_item_extra_info\nTokopedia: https://bit.ly/3PdbI8e Tiktok: https://bit.ly/3l7AkBy\nfetch product id list, e.g. get product list [\"123\",\"345\",\"456\"]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "返回结果 参考现有 Atoor: https://dashboard.staging.atoor.com/ocms/product 返回数据 设计, 还会结合当前做一定改动,删除一些不能获取数据的字段!",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "tiktok  lazada",
                        "name": "create_time_from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "create_time_to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "4个 MP 都有\n tiktok  lazada   tokopedia  shopee\n\tMarketplaceType int `json:\"marketplace_type\"`",
                        "name": "page_no",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "priority order desc",
                        "name": "product_id_list",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "seller_sku_list",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "name": "sku_id_list",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "tiktok  shopee",
                        "name": "update_time_from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "update_time_to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPProductListResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    }
                }
            }
        },
        "/v1/product/price": {
            "put": {
                "description": "lazada: https://bit.ly/3yBQVVV shopee: https://bit.ly/3Pn4HSe tokopedia: https://bit.ly/3PoACBR tiktok: https://bit.ly/3szsTHt\nupdate product original price, e.g. old price is 1000Rp, new price is 668Rp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "update product original price",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "common query params: shop_id",
                        "name": "shop_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "common query params: marketplace type",
                        "name": "mp",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Update Product Price",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateProductPriceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPEmptyResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    }
                }
            }
        },
        "/v1/product/shelf/up-down": {
            "put": {
                "description": "Lazada: https://bit.ly/37Ix6kR shopee: https://bit.ly/3wbm6G6 Tokopedia: https://bit.ly/3wkDsiH Tiktok: https://bit.ly/3sxkOTu\nactivate/deactivate products on/from shelf, in other words, list/unlist product. e.g. iphone 13 red 256GB is top seller goods. so we often deactivate it for the sake of shortage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "activate/deactivate products on/from shelf, in other words, list/unlist product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "common query params: shop_id",
                        "name": "shop_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "common query params: marketplace type",
                        "name": "mp",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "deactivate Product From Shelf",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpDownShelfReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPEmptyResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    }
                }
            }
        },
        "/v1/product/stock": {
            "put": {
                "description": "lazada: https://bit.ly/3yBQVVV shopee: https://bit.ly/3wrusIL tokopedia: https://bit.ly/3NcVf1Z tiktok: https://bit.ly/3sAyf57\nupdate product stock at specific warehouse, e.g. update stock from 1 to 100 at specific warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "update product stock at specific warehouse",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "common query params: shop_id",
                        "name": "shop_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "common query params: marketplace type",
                        "name": "mp",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Update Product Stock",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateProductStockRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPEmptyResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/api.HTTPErrResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AddEditProductReq": {
            "type": "object",
            "properties": {
                "brand_id": {
                    "type": "string"
                },
                "brand_name": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "condition": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Image"
                    }
                },
                "is_single_product": {
                    "type": "boolean"
                },
                "min_order": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "product_weight": {
                    "type": "integer"
                },
                "standard_shipper_option_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.StandardShipperOption"
                    }
                },
                "standard_sku_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.StandardSKU"
                    }
                },
                "status": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer"
                },
                "stock_unit": {
                    "type": "string"
                },
                "weight_unit": {
                    "type": "string"
                }
            }
        },
        "api.Attribute": {
            "type": "object",
            "properties": {
                "attribute_type": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "input_type": {
                    "$ref": "#/definitions/api.InputType"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Value"
                    }
                }
            }
        },
        "api.Brand": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.CreateProductData": {
            "type": "object",
            "properties": {
                "fail_rows_data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "fail_reason": {
                                "type": "string"
                            },
                            "request_id": {
                                "type": "string"
                            },
                            "seller_sku": {
                                "type": "string"
                            }
                        }
                    }
                },
                "success_count": {
                    "type": "integer"
                },
                "success_rows_data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "product_id": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "api.GetBrandListData": {
            "type": "object",
            "properties": {
                "brand_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Brand"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "api.GetProductAttrsData": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Attribute"
                    }
                }
            }
        },
        "api.HTTPCreateProductResp": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.CreateProductData"
                },
                "metadata": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.HTTPEmptyResp": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.HTTPErrResp": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.HTTPGetBrandListResp": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.GetBrandListData"
                },
                "metadata": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.HTTPGetCategoryTreeResp": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.ShipperCategoryTreeData"
                },
                "metadata": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.HTTPGetProductAttrsResp": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.GetProductAttrsData"
                },
                "metadata": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.HTTPProductListResp": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.ProductPageResultData"
                },
                "metadata": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.HTTPUpdateProductResp": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/api.CreateProductData"
                },
                "metadata": {
                    "$ref": "#/definitions/api.Meta"
                }
            }
        },
        "api.Image": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "api.InputType": {
            "type": "object",
            "properties": {
                "is_customized": {
                    "type": "boolean"
                },
                "is_mandatory": {
                    "type": "boolean"
                },
                "is_multiple_selected": {
                    "type": "boolean"
                }
            }
        },
        "api.Meta": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "api.ProductIDSRequest": {
            "type": "object",
            "properties": {
                "product_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.ProductPageResultData": {
            "type": "object",
            "properties": {
                "edges": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "node": {
                                "type": "object",
                                "properties": {
                                    "channel": {
                                        "type": "string"
                                    },
                                    "createdAt": {
                                        "type": "string"
                                    },
                                    "createdBy": {
                                        "type": "integer"
                                    },
                                    "internalShopId": {
                                        "type": "string"
                                    },
                                    "isSingleProduct": {
                                        "description": "one productID(spuID) only have one skuID",
                                        "type": "boolean"
                                    },
                                    "marketplaceProductId": {
                                        "type": "integer"
                                    },
                                    "marketplaceShopId": {
                                        "description": "MerchantId           int       `json:\"merchantId\"`",
                                        "type": "integer"
                                    },
                                    "productId": {
                                        "type": "string"
                                    },
                                    "productImage": {
                                        "type": "string"
                                    },
                                    "productName": {
                                        "type": "string"
                                    },
                                    "shopName": {
                                        "description": "ReasonUpload         string    `json:\"reasonUpload\"`\n\tStatusUpload         string    `json:\"statusUpload\"`",
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "updatedAt": {
                                        "type": "string"
                                    },
                                    "variants": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "availableStock": {
                                                    "type": "integer"
                                                },
                                                "channel": {
                                                    "type": "string"
                                                },
                                                "marketplaceProductVariantId": {
                                                    "type": "integer"
                                                },
                                                "merchantId": {
                                                    "type": "integer"
                                                },
                                                "price": {
                                                    "type": "integer"
                                                },
                                                "productId": {
                                                    "type": "string"
                                                },
                                                "shopName": {
                                                    "description": "VariantId                   string `json:\"variantId\"`",
                                                    "type": "string"
                                                },
                                                "skuMaster": {
                                                    "type": "string"
                                                },
                                                "skuVariant": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "stock": {
                                                    "type": "integer"
                                                },
                                                "variation": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "page": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "api.SKUPrice": {
            "type": "object",
            "properties": {
                "price": {
                    "description": "example:\"default Rp\"",
                    "type": "integer"
                },
                "sku_id": {
                    "type": "string"
                }
            }
        },
        "api.SKUStock": {
            "type": "object",
            "properties": {
                "sku_id": {
                    "type": "string"
                },
                "stock": {
                    "description": "example:\"default Rp\"",
                    "type": "integer"
                }
            }
        },
        "api.ShipperCategoryTreeData": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_leaf": {
                    "type": "boolean"
                },
                "parent_id": {
                    "type": "string"
                }
            }
        },
        "api.StandardSKU": {
            "type": "object",
            "properties": {
                "available_stock": {
                    "type": "integer"
                },
                "brand_id": {
                    "type": "string"
                },
                "brand_name": {
                    "type": "string"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Image"
                    }
                },
                "price": {
                    "type": "integer"
                },
                "seller_sku": {
                    "type": "integer"
                },
                "warehouse_id": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "api.StandardShipperOption": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "is_free_ship": {
                    "type": "boolean"
                },
                "logistic_id": {
                    "type": "integer"
                },
                "ship_fee": {
                    "type": "integer"
                },
                "size_id": {
                    "type": "integer"
                }
            }
        },
        "api.UpDownShelfReq": {
            "type": "object",
            "required": [
                "skus"
            ],
            "properties": {
                "skus": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer"
                            },
                            "name": {
                                "description": "SKUNo       string `json:\"sku_no\"`\nSellerSKUNo string `json:\"seller_sku_no\"`",
                                "type": "string"
                            },
                            "on_shelf": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                "spu_id": {
                    "type": "string"
                }
            }
        },
        "api.UpdateProductPriceRequest": {
            "type": "object",
            "properties": {
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.SKUPrice"
                    }
                }
            }
        },
        "api.UpdateProductStockRequest": {
            "type": "object",
            "properties": {
                "stocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.SKUStock"
                    }
                }
            }
        },
        "api.Value": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}